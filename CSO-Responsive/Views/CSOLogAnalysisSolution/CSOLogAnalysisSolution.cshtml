@{
    ViewData["Title"] = "CSO Log Analysis Solution";
}


<link href="~/css/fontawesome/styles.min.css" rel="stylesheet" />
<link href="~/css/tabulator/tabulator.min.css" rel="stylesheet" />
<link href="~/css/tabulator/tabulator_bootstrap4.min.css" rel="stylesheet" />
<script src="~/js/jquery.min.js"></script>
<script src="~/js/jquery.datatables.js"></script>
<link href="~/css/pnotify.css" rel="stylesheet" />
<script src="~/js/pnotify.js"></script>
<script src="~/js/pnotify.confirm.js"></script>
<script src="~/lib/bootstrap/dist/js/popupAlert.js"></script>
<script src="~/lib/bootstrap/dist/js/buttons.html5.min.js"></script>
<script src="~/js/common.js"></script>
<script src="~/js/xlsx.min.js"></script>
@* <script src="~/js/tabulator.min.js"></script> *@
<script src="~/js/aes.js"></script>

<style>

    .form-control {
        padding: 0 10px !important;
        border: 0;
        border-bottom: 1px solid #cccccc;
        border-radius: 0px;
    }

    label {
        margin-bottom: 0;
        margin-top: .3rem;
    }

    #scrollToTopBtn:hover {
        background-color: #0056b3; /* Darker blue */
    }

    #scrollToTopBtn {
        outline: none; /* Removes the focus border */
    }

    .tabulator .tabulator-header .tabulator-col {
        font-size: 14px;
        background-color: #D6E4F0;
        font-weight: 600;
        border-right: 1px solid #ccc;
    }

    .tabulator-row .tabulator-cell {
        padding: 5px 5px;
        font-size: 14px;
        height: 30px;
    }

    .tabulator-cell:hover {
        color: #4682B4 !important;
        cursor: pointer !important;
        font-weight: bold;
    }

    .form-group {
        margin-bottom: 0.5rem; /* Reduce space between each input group */
    }

    .custom-header {
        background-color: #bec6e1 !important; /* Attractive blue background */
        color: black; /* White text */
        border-radius: 4px 4px 0 0; /* Rounded corners */
        font-weight: bold;
    }

    /* Responsive pagination styling */
    .tabulator-paginator {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-end;
        align-items: center;
        gap: 0.5rem;
        padding: 10px 15px;
        background: #f8f9fa;
        border-top: 1px solid #dee2e6;
        font-size: 14px;
    }

    .tabulator-page,
    .tabulator-page.active,
    .tabulator-page.disabled {
        padding: 6px 12px;
        border-radius: 4px;
        border: 1px solid #ced4da;
        background-color: #ffffff;
        color: #495057;
        cursor: pointer;
        margin-right: .3rem;
    }

        .tabulator-page.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

        .tabulator-page.disabled {
            color: #adb5bd;
            background-color: #e9ecef;
            cursor: not-allowed;
        }

    .tabulator-page-size {
        height: 32px;
        padding: 4px 8px;
        font-size: 14px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        margin-right: 1rem;
    }

    @@media (max-width: 576px) {
        .tabulator-paginator {
            justify-content: center;
        }

        .tabulator-page-size {
            width: 100%;
            margin-top: 5px;
        }
    }

   /*  body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f4f6f9;
        padding: 2rem;
    } */

    .badge-success {
        background-color: #28a745;
    }

    .badge-warning {
        background-color: #ffc107;
        color: black;
    }

    .badge-secondary {
        background-color: #6c757d;
    }

    .badge-danger {
        background-color: #dc3545;
    }

    .tabulator .tabulator-cell .badge {
        font-size: 0.75rem;
        padding: 4px 8px;
        border-radius: 6px;
        color: white;
        display: inline-flex;
        align-items: center;
        gap: 4px;
    }

    @@media screen and (max-width: 768px) {
        #filter-module
        {
            width: 100% !important;
        }
    }

    .card {
        border-radius: 0.5rem;
        box-shadow: 0 4px 12px rgba(17, 122, 139, 0.4);
    }

</style>

<div class="content">
    <div class="card" style="margin-top:10px;">
        <div class="card-body d-flex justify-content-between align-items-center" style=" padding-top:8px;padding-bottom:8px;">
            <div style="font-size:18px; font-weight: 600;">
                CSO Log Analysis Solution
            </div>
            <div>
                @* <button id="addButton" type="button" onclick="" class="btn btn-outline-success legitRipple mr-2">
                    <i class="fas fa-plus mr-2 fa-1x"></i>Add CSO Log
                </button> *@
                <button id="backButton" class="btn btn-outline-primary ">
                    <i class="fas fa-arrow-left"></i>Back
                </button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-body">
                    <div class="form-group row">
                        <div id="div_CsoLogAnalTable"></div>
                        <div id="pager" class="mt-2"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/js/tabulator.js"></script>
    <script src="~/js/tabulator.min.js"></script>
    @* <script src="~/js/select2.min.js"></script> *@
    <script>
        var tabledata = [];
        var table = '';
        const searchTerms = {};
        $(document).ready(function () {

            document.addEventListener('DOMContentLoaded', function () {
                document.getElementById('backButton').addEventListener('click', function () {
                    window.history.back();
                });
            });

            loadCSOLogAnalData();
        });

        function loadCSOLogAnalData() {
            Blockloadershow();
            $.ajax({
                url: '@Url.Action("GetCSOLogAnalList", "CSOLogAnalysisSolution")',
                type: 'GET',
                success: function (data) {
                    Blockloaderhide();
                    if (data && Array.isArray(data)) {
                        OnCSOLogAnalGridLoad(data);
                    }
                    else {
                        showDangerAlert('No data available to load.');
                    }
                },
                error: function (xhr, status, error) {
                    showDangerAlert('Error retrieving data: ' + error);
                    Blockloaderhide();
                }
            });
        }

                //define column header menu as column visibility toggle
        var headerMenu = function () {
            var menu = [];
            var columns = this.getColumns();

            for (let column of columns) {

                //create checkbox element using font awesome icons
                let icon = document.createElement("i");
                icon.classList.add("fas");
                icon.classList.add(column.isVisible() ? "fa-check-square" : "fa-square");

                //build label
                let label = document.createElement("span");
                let title = document.createElement("span");

                title.textContent = " " + column.getDefinition().title;

                label.appendChild(icon);
                label.appendChild(title);

                //create menu item
                menu.push({
                    label: label,
                    action: function (e) {
                        //prevent menu closing
                        e.stopPropagation();

                        //toggle current column visibility
                        column.toggle();

                        //change menu item icon
                        if (column.isVisible()) {
                            icon.classList.remove("fa-square");
                            icon.classList.add("fa-check-square");
                        } else {
                            icon.classList.remove("fa-check-square");
                            icon.classList.add("fa-square");
                        }
                    }
                });
            }

            return menu;
        };

        const formatStatus = (cell) => {
            const value = cell.getValue();

            const map = {
                "Completed": { cls: "badge-success", icon: "✔" },
                "In Progress": { cls: "badge-secondary", icon: "⏳" },
                "Pending": { cls: "badge-warning", icon: "🕒" },
                "Overdue": { cls: "badge-danger", icon: "⚠️" }
            };

            // const cls = map[value] || "badge-secondary";
            // const icon = value === "Completed" ? "✔" : "";
            const status = map[value] || { cls: "badge-secondary", icon: "" };
            return `<span class="badge ${status.cls}">${status.icon} ${value}</span>`;
        };

        function OnCSOLogAnalGridLoad(response) {
            debugger;
            Blockloadershow();

            tabledata = [];
            let columns = [];

            // Map the response to the table format
            if (response.length > 0) {
                $.each(response, function (index, item) {

                    let formattedDate = "";
                    let updatedDate = "";
                    let logedDate = "";
                    if (item.addedOn) {
                        const dateObj = new Date(item.addedOn);
                        formattedDate = dateObj.toLocaleDateString("en-GB");
                    }
                    if (item.updatedOn) {
                        const updatedateObj = new Date(item.updatedOn);
                        updatedDate = updatedateObj.toLocaleDateString("en-GB");
                    }
                    if (item.logdate) {
                        const logedDateObj = new Date(item.logdate);
                        logedDate = logedDateObj.toLocaleDateString("en-GB");
                    }

                    tabledata.push({
                        Sr_No: index + 1,
                        Id: item.id,
                        Date: logedDate,
                        CSO_No: item.csoNoFYear,
                        Logged_By: item.userName,
                        Plant_Name: item.plantName,
                        Brand_Name: item.brandName,
                        ProductType: item.productTypeName,
                        ComplainTypeName: item.complainTypeName,
                        Status: item.status,
                        RootCauseStatus: item.rootStatus,
                        MonitorStatus: item.monitorStatus,
                        ApprovalStatus: item.approvalStatus,
                        ClosureStatus: item.closureStatus,
                        PendingDays: item.pendingDays,
                        CreatedDate: formattedDate,
                        CreatedBy: item.addedBy,
                        UpdatedBy: item.updatedBy,
                        UpdatedDate: updatedDate
                    });
                });

                columns.push(
                    { title: "SNo", field: "Sr_No", width: 50, responsive: 0,  sorter: "number", headerMenu: headerMenu, hozAlign: "center", headerHozAlign: "left" },
                    { title: "Date", field: "Date", responsive: 1, sorter: "date", headerMenu: headerMenu, headerFilter: "input", hozAlign: "center", headerHozAlign: "center" },
                    { title: "CSO No", field: "CSO_No", responsive: 2,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "center", headerHozAlign: "center" },
                    { title: "Logged By", field: "Logged_By", responsive: 3,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "left", headerHozAlign: "left" },
                    { title: "Plant Name", field: "Plant_Name", responsive: 4,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "left", headerHozAlign: "left" },
                    { title: "Brand Name", field: "Brand_Name", responsive: 5,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "left", headerHozAlign: "left" },
                    { title: "ProductType", field: "ProductType", responsive: 6,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "left", headerHozAlign: "left" },
                    { title: "Root Cause", field: "RootCauseStatus", responsive: 7, headerMenu: headerMenu, headerFilter: "input",formatter: formatStatus, hozAlign: "center", width: 130 },
                    { title: "Monitoring", field: "MonitorStatus", responsive: 8,headerMenu: headerMenu, headerFilter: "input", formatter: formatStatus, hozAlign: "center", width: 130 },
                    { title: "Approval", field: "ApprovalStatus", responsive: 9, headerMenu: headerMenu, headerFilter: "input",formatter: formatStatus, hozAlign: "center", width: 120 },
                    { title: "Closure", field: "ClosureStatus", responsive: 10, headerMenu: headerMenu, headerFilter: "input",formatter: formatStatus, hozAlign: "center", width: 120 },
                    { title: "Days Remaining", field: "PendingDays", responsive: 11,headerMenu: headerMenu, hozAlign: "center", headerHozAlign: "center" },
                    { title: "User", field: "CreatedBy", responsive: 12,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "center", headerHozAlign: "center", visible: false },
                    { title: "Create Date", field: "CreatedDate", responsive: 13,  sorter: "date", headerMenu: headerMenu, headerFilter: "input", hozAlign: "center", headerHozAlign: "center", visible: false },
                    { title: "Updated By", field: "UpdatedBy", responsive: 14,  headerMenu: headerMenu, headerFilter: "input", hozAlign: "center", headerHozAlign: "center", visible: false },
                    { title: "Update Date", field: "UpdatedDate", responsive: 15,  sorter: "date", headerMenu: headerMenu, headerFilter: "input", hozAlign: "center", headerHozAlign: "center", visible: false },
                );

                // // Initialize Tabulator
                table = new Tabulator("#div_CsoLogAnalTable", {
                    data: tabledata,
                    layout: "fitDataTable",
                    responsiveLayout: false,
                    height: "auto",
                    // responsiveLayoutCollapseFormatter: function (data) {
                    //     return data.map(d => `<strong>${d.title}</strong>: ${d.value}`).join("<br>");
                    // },
                    // renderHorizontal: "virtual",
                    movableColumns: true,
                    pagination: "local",
                    paginationSize: 10,
                    paginationSizeSelector: [50, 100, 500, 1500, 2000],
                    paginationCounter: "rows",
                        paginationElement: document.getElementById("pager"),
                    dataEmpty: "<div style='text-align: center; font-size: 1rem; color: gray;'>No data available</div>", // Placeholder message
                    columns: columns
                });

                // table.on("cellClick", function (e, cell) {
                //     let columnField = cell.getColumn().getField();

                //     if (columnField !== "Action") {
                //         let rowData = cell.getRow().getData();
                //         editCSOLog(rowData.Id);
                //     }
                // });

                // table.on("cellClick", function (e, cell) {
                //     let columnField = cell.getColumn().getField();

                //     if (columnField !== "Action") {
                //         let rowData = cell.getRow().getData();
                //         showEditVendor(rowData.Id);
                //     }
                // });

                // Export to Excel on button click
                // document.getElementById("exportExcel").addEventListener("click", function () {
                //     table.download("xlsx", "ProductCode_Data.xlsx", { sheetName: "Product Code Data" });
                // });
            }
            else {
                showDangerAlert('No data available.');
            }

            // Hide loader
            Blockloaderhide();
        }

        

        function clearForm() {
            // Clear all input fields
            document.querySelectorAll('.form-control').forEach(function (input) {
                if (input.tagName === 'INPUT') {
                    if (input.type === 'hidden' || input.readOnly) {
                        // Skip hidden or readonly inputs
                        return;
                    }
                    input.value = ''; // Clear input value
                } else if (input.tagName === 'SELECT') {
                    input.selectedIndex = 0; // Reset dropdown to first option
                }
            });

            // Clear error messages if needed
            document.querySelectorAll('.text-danger').forEach(function (error) {
                error.textContent = '';
            });
        }

        // function delConfirm(recid) {
        //     PNotify.prototype.options.styling = "bootstrap3";
        //     (new PNotify({
        //         title: 'Confirmation Needed',
        //         text: 'Are you sure to delete? It will not delete if this record is used in transactions.',
        //         icon: 'glyphicon glyphicon-question-sign',
        //         hide: false,
        //         confirm: {
        //             confirm: true
        //         },
        //         buttons: {
        //             closer: false,
        //             sticker: false
        //         },
        //         history: {
        //             history: false
        //         },
        //     })).get().on('pnotify.confirm', function () {
        //         $.ajax({
        //             url: '@Url.Action("Delete", "ProductType")',
        //             type: 'POST',
        //             data: { id: recid },
        //             success: function (data) {
        //                 if (data.success == true) {
        //                     showSuccessAlert("Product Type Deleted successfully.");
        //                     setTimeout(function () {
        //                         window.location.reload();
        //                     }, 2500);
        //                 }
        //                 else if (data.success == false && data.message == "Not_Deleted") {
        //                     showDangerAlert("Record is used in PPS Log transactions.");
        //                 }
        //                 else {
        //                     showDangerAlert(data.message);
        //                 }
        //             },
        //             error: function () {
        //                 showDangerAlert('Error retrieving data.');
        //             }
        //         });
        //     }).on('pnotify.cancel', function () {
        //         loadCSOLogAnalData();
        //     });
        // }

        // function csoLogPage() {
        //     var url = "@Url.Action("CSOLog", "CSOLog")";
        //     window.open(url, '_self');
        // }

        // function editCSOLog(recid) {
        //     var key = CryptoJS.enc.Utf8.parse('8080808080808080');
        //     var iv = CryptoJS.enc.Utf8.parse('8080808080808080');
        //     var encryptedId = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(recid.toString()), key,
        //     { keySize: 256 / 8, iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        //     var encryptedBase64 = encryptedId.toString();
        //     var urlSafe = encryptedBase64.replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
        //     var url = "@Url.Action("CSOLog", "CSOLog")" + "/" + urlSafe;
        //     window.open(url, '_self');
        // }
    </script>
}
