@using CSO.Core.Models
@using CSO.Core.Security
@using Microsoft.AspNetCore.Http
@using CSO.Core.Repositories.SecurityActionRepo

@model UserViewModel

@inject IHttpContextAccessor HttpContextAccessor
@inject ISecurityActionRepository _securityActionRepository


@{
    ViewData["Title"] = "User Details";

    var userRoleId = HttpContextAccessor.HttpContext.Session.GetInt32("UserRole");

    var canAdd = await _securityActionRepository.CanDoAsync(SecurityActionsEnum.SEC_ADD_USERS, (int)userRoleId);
    var canEdit = await _securityActionRepository.CanDoAsync(SecurityActionsEnum.SEC_EDIT_USERS, (int)userRoleId);
    var isNew = Model.Id == 0;
    var disableSelect = (canEdit && !isNew) ? "disabled=\"disabled\"" : "";
}

<link href="~/css/fontawesome/styles.min.css" rel="stylesheet" />
<script src="~/js/jquery.min.js"></script>
<script src="~/js/jquery.datatables.js"></script>
<link href="~/css/pnotify.css" rel="stylesheet" />
<script src="~/js/pnotify.js"></script>
<script src="~/js/pnotify.confirm.js"></script>
<script src="~/lib/bootstrap/dist/js/datatables.buttons.min.js"></script>
<script src="~/lib/bootstrap/dist/js/popupAlert.js"></script>
<script src="~/lib/bootstrap/dist/js/jszip.min.js"></script>
<script src="~/lib/bootstrap/dist/js/buttons.html5.min.js"></script>
<script src="~/js/common.js"></script>
<script src="~/js/xlsx.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.2/js/bootstrap.bundle.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
    em {
        color: red;
        font-weight: 700;
    }

    .card {
        border-radius: 0.5rem;
        box-shadow: 0 4px 12px rgba(17, 122, 139, 0.4);
    }

    .form-label {
        font-weight: 500;
        color: #495057;
    }

   

    .form-check-label {
        font-weight: 500;
    }

    .btn {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    .card-header i {
        margin-right: 0.5rem;
    }

    .section-title {
        background: #f8f9fa;
        padding: 10px;
        font-weight: 600;
        border-left: 4px solid #007bff;
        font-size:18px;
        
    }


</style>

<input id="hf_GetDivisions" type="hidden" value='@Url.Action("GetDivisionList", "Users")'>
<input id="hf_GetPlantBrandByDivision" type="hidden" value='@Url.Action("GetPlantListAndBrandListByDivision", "Users")'>
<input id="hf_GetNearestPlantByPlant" type="hidden" value='@Url.Action("GetNearestPlantByPlant", "Users")'>
<input id="hf_GetProductTypeByBrand" type="hidden" value='@Url.Action("GetProductTypeByBrand", "Users")'>
<input id="hf_InsertUpdateUser" type="hidden" value='@Url.Action("InsertUpdateUser", "Users")'>
<input id="hf_UsersGridPage" type="hidden" value='@Url.Action("Index", "Users")'>

<div class="content">
    
    <div class="card" style="margin-top:10px;">
        <div class="card-body d-flex justify-content-between align-items-center">
            <div style="font-size:18px; font-weight: 600;">
                User Details
            </div>
            <div>
                @if ((canAdd && isNew) || (canEdit && !isNew))
                {
                    <button type="button" id="saveButton" onclick="InsertUpdateUser()" class="btn btn-primary">
                        <i class="fas fa-floppy-disk mr-2"></i>Save
                    </button>
                }

                <button type="button" class="btn btn-warning" onclick="history.back()">
                    <i class="fas fa-arrow-left mr-2"></i>Back
                </button>
            </div>
        </div>
    </div>

                <form id="userForm" method="post" asp-action="InsertUpdateUser" asp-controller="Users">

                    <!-- Personal Information -->
            <div class="card">
                <div class="section-title">
                            <label class="mb-0"><i class="fas fa-user"></i>Personal Information</label>
                        </div>
                        <div class="card-body">
                            @Html.HiddenFor(m => m.Id)
                            <div class="row">
                                <div class="col-lg-2 mb-3">
                                    @Html.LabelFor(m => m.ADid, new { @class = "custom-label" })<em>*</em>
                                    @Html.TextBoxFor(l => l.ADid, new { @id = "txtADid", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.ADid, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 mb-3">
                                    @Html.LabelFor(m => m.Name, new { @class = "custom-label" })<em>*</em>
                                    @Html.TextBoxFor(l => l.Name, new { @id = "txtName", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.Name, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 mb-3">
                                  @Html.LabelFor(m => m.Email, new { @class = "custom-label" })<em>*</em>
                                    @Html.TextBoxFor(l => l.Email, new { @id = "txtEmail", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-2 mb-3">
                                    @Html.LabelFor(m => m.MobileNo, new { @class = "custom-label" })<em>*</em>
                                    @Html.TextBoxFor(l => l.MobileNo, new { @id = "txtMobile", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.MobileNo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-2 mb-3">
                            @Html.LabelFor(m => m.Designation, new { @class = "custom-label" })<em>*</em>
                                    @Html.TextBoxFor(l => l.Designation, new { @id = "txtDesignation", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.Designation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                   </div>
                    <!-- Access & Role -->
        <div class="card">
                <div class="section-title">
                            <label class="mb-0"><i class="fas fa-key"></i> Access & Role</label>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12 col-md-6 col-lg-3 mb-3">
                            @Html.LabelFor(m => m.RoleId, new { @class = "custom-label" })<em>*</em>
                                    @Html.DropDownListFor(l => l.RoleId, (IEnumerable<SelectListItem>)ViewBag.RoleList, "Select Role", new { @id = "ddlRole", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.RoleId, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-12 col-md-6 col-lg-3 mb-3">
                            @Html.LabelFor(m => m.UserType, new { @class = "custom-label" })<em>*</em>
                                    @Html.DropDownListFor(l => l.UserType, (IEnumerable<SelectListItem>)ViewBag.UserTypeList, "Select User Type", new { @id = "ddlUserType", @class = "form-control", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                    @Html.ValidationMessageFor(l => l.UserType, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-12 col-md-12 col-lg-4 mb-3">
                            @Html.LabelFor(m => m.DivisionId, new { @class = "custom-label" })<em>*</em><br />
                                    <div class="lstDivisionCtr">
                                        <select tabindex="-1" class="lstDivision select2 w-100" onload="GetDivisionList(@Model.DivisionId)" multiple="multiple" id="lstDivision" placeholder="Select Section" @Html.Raw(disableSelect)>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
              </div>


                    <!-- Organization Details -->
        <div class="card">
                <div class="section-title">
                            <label class="mb-0"><i class="fas fa-building"></i> Organization Details</label>
                        </div>
                        <div class="card-body row">
                            <div class="col-lg-4 mb-3">
                        @Html.LabelFor(m => m.PlantId, new { @class = "custom-label" })<em>*</em>
                                <br />
                                <div class="lstPlantCtr">
                                    <select tabindex="-1" class="lstPlant select2 w-100" multiple="multiple" id="lstPlant" placeholder="Select Plant" @Html.Raw(disableSelect)>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-4 mb-3">
                        @Html.LabelFor(m => m.NearestPlantId, new { @class = "custom-label" })<em>*</em>
                                <br />
                                <div class="lstNPlantCtr">
                                    <select tabindex="-1" class="lstNPlant select2 w-100" multiple="multiple" id="lstNPlant" placeholder="Select Nearest Plant" @Html.Raw(disableSelect)>
                                    </select>
                                </div>
                            </div>
                        </div>
                </div>

                    <!-- Product Preferences -->
        <div class="card">
                <div class="section-title">
                            <label class="mb-0"><i class="fas fa-boxes"></i> Product Preferences</label>
                        </div>
                        <div class="card-body row">
                            <div class="col-lg-4 mb-3">
                        @Html.LabelFor(m => m.BrandId, new { @class = "custom-label" })<em>*</em>
                                <br />
                                <div class="lstBrandCtr">
                                    <select tabindex="-1" class="lstBrand select2 w-100" multiple="multiple" id="lstBrand" placeholder="Select Brand" @Html.Raw(disableSelect)>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-4 mb-3">
                        @Html.LabelFor(m => m.ProductTypeId, new { @class = "custom-label" })<em>*</em>
                                <br />
                                <div class="lstProductTypeCtr">
                                    <select tabindex="-1" class="lstProductType select2 w-100" multiple="multiple" id="lstProductType" placeholder="Select ProductType" @Html.Raw(disableSelect)>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <div class="form-check mt-2">
                                    @Html.LabelFor(m => m.IsInMailMatrix, new { @class = "mb-0 mr-2 custom-label" })
                                    @Html.CheckBoxFor(m => m.IsInMailMatrix, new { id = "chkIsInMailMatrix", @disabled = (canEdit && !isNew) ? "disabled" : "" })
                                </div>
                            </div>
                        </div>
                </div>
              

                </form>
            </div>
      
   
@section Scripts {
    <script src="~/js/select2.min.js"></script>
    <script src="~/js/users/userdetails.js" asp-append-version="true"></script>
    <script>
        var selectedDivisionIds = "@Model.DivisionId";
        var selectedPlantIds = "@Model.PlantId";
        var selectedBrandIds = "@Model.BrandId";
        var selectedNearestPlantIds = "@Model.NearestPlantId";
        var selectedProductTypeIds = "@Model.ProductTypeId";
        var userId = @Model.Id;
    </script>
}

