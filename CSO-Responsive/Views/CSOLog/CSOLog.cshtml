@model CSO.Core.Models.CSOLogViewModel

@{
    ViewData["Title"] = "CSOLog";
}
<link href="~/css/fontawesome/styles.min.css" rel="stylesheet" />
<script src="~/js/jquery.min.js"></script>
<script src="~/js/jquery.datatables.js"></script>
<link href="~/css/pnotify.css" rel="stylesheet" />
<script src="~/js/pnotify.js"></script>
<script src="~/js/pnotify.confirm.js"></script>
<script src="~/lib/bootstrap/dist/js/datatables.buttons.min.js"></script>
<script src="~/lib/bootstrap/dist/js/popupAlert.js"></script>
<script src="~/lib/bootstrap/dist/js/jszip.min.js"></script>
<script src="~/lib/bootstrap/dist/js/buttons.html5.min.js"></script>
<script src="~/js/common.js"></script>
<script src="~/js/xlsx.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.6.2/js/bootstrap.bundle.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
    em {
        color: red;
        font-weight: 700;
    }

    .card {
        border-radius: 0.5rem;
        box-shadow: 0 4px 12px rgba(17, 122, 139, 0.4);
    }

    .form-label {
        font-weight: 500;
        color: #495057;
    }



    .form-check-label {
        font-weight: 500;
    }

    .btn {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    .card-header i {
        margin-right: 0.5rem;
    }


    .required::after {
        content: "*";
        color: red;
        margin-left: 4px;
    }

    .section-title {
        background: #f8f9fa;
        padding: 10px;
        font-weight: 600;
        border-left: 4px solid #007bff;
        font-size: 18px;
    }

</style>

<input id="hf_GetBrandListAndPlantListByDivisinAndUser" type="hidden" value='@Url.Action("GetBrandListAndPlantListByDivisinAndUser", "CSOLog")'>
<input id="hf_GetProductTypeListByBrandAndUser" type="hidden" value='@Url.Action("GetProductTypeListByBrandAndUser", "CSOLog")'>
<input id="hf_GetNearestPlantListByPlantAndUser" type="hidden" value='@Url.Action("GetNearestPlantListByPlantAndUser", "CSOLog")'>
<input id="hf_CSOLogGridPage" type="hidden" value='@Url.Action("Index", "CSOLog")'>
<input id="hf_SelectedBrandId" type="hidden" value='@Model.BrandId'>
<input id="hf_SelectedProductTypeId" type="hidden" value='@Model.ProductTypeId'>
<input id="hf_SelectedPlantId" type="hidden" value='@Model.PlantId'>
<input id="hf_SelectedNearestPlantId" type="hidden" value='@Model.NearestPlantId'>
<div class="content">

    <div class="card" style="margin-top:10px;">
        <div class="card-body d-flex justify-content-between align-items-center" style="padding-top:8px;padding-bottom:0px;">
            <div style="font-size:18px; font-weight: 600;">
                CSO Log
            </div>
                <!-- Logged By -->
                <div class="col-md-2 mb-2 text-muted">
                    Logged By:
                    <strong>
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control font-weight-bold", @disabled = "disabled" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                    </strong>
                </div>

                <!-- Log Date -->
                <div class=" col-md-2 mb-2 text-muted">
                    Log Date:
                    <strong>
                        @Html.TextBoxFor(m => m.Logdate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control font-weight-bold", @disabled = "disabled" })
                        @Html.ValidationMessageFor(m => m.Logdate, "", new { @class = "text-danger" })
                    </strong>
                </div>

                <!-- Buttons -->
                <div>
                    <button type="button" id="saveButton" onclick="InsertUpdateCSOLog()" class="btn btn-primary">
                        <i class="fas fa-floppy-disk mr-2"></i>Save
                    </button>

                <button type="button" class="btn btn-warning" onclick="history.back()">
                        <i class="fas fa-arrow-left mr-2"></i>Back
                    </button>
                </div>
            </div>
        </div>
   

  



                <form id="CSOLog-form" method="post" asp-action="InsertUpdateCSOLog" asp-controller="CSOLog">
            <div class="card">
            <div class=" section-title">

                <label class="mb-0"><i class="fas fa-address-card mr-2 text-primary"></i>General Details</label>
                </div>


                <div class="card-body">
                    <div class="row g-3">
                                @Html.HiddenFor(m => m.Id)
                                @Html.HiddenFor(m => m.FinancialYear)
                                <div class="col-md-2">
                        <label class=" custom-label required">CSO No.</label>
                                    @{
                                        string CSONo = string.Empty;
                                        if (Model.CSONo > 0 && Model.FinancialYear > 0)
                                        {
                                            CSONo = Model.CSONo + "/" + Model.FinancialYear;
                                        }
                                    }

                                    @Html.TextBox("CSONo", CSONo, new { @class = "form-control font-weight-bold", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(m => m.CSONo, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                                  <label class=" required select2 custom-label">Division/BU</label>

                                    @Html.DropDownListFor(m => m.DivisionId, (IEnumerable<SelectListItem>)ViewBag.DivisionList, "Select Division", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.DivisionId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                        <label class=" required select2 custom-label">Category / Function</label>

                                    @Html.DropDownListFor(m => m.CategoryId, (IEnumerable<SelectListItem>)ViewBag.CategoryList, "Select Category", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="card">
            <div class=" section-title">
                <label class="mb-0"><i class="fas fa-box-open mr-2 text-info"></i>Product Information</label>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-2">
                        <label class=" required select2 custom-label">Brand</label>

                                    @Html.DropDownListFor(m => m.BrandId, Enumerable.Empty<SelectListItem>(), "Select Brand", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.BrandId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                        <label class="required select2 custom-label">Product Type</label>

                                    @Html.DropDownListFor(m => m.ProductTypeId, Enumerable.Empty<SelectListItem>(), "Select Product Type", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.ProductTypeId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                        <label class=" required select2 custom-label">SKU Details<em>*</em></label>

                                    @Html.ValidationMessageFor(m => m.SKUDetails, "", new { @class = "text-danger" })
                                    @Html.TextAreaFor(m => m.SKUDetails, 1, 40, new { @class = "form-control " })
                                </div>
                                <div class="col-md-2">
                        <label class=" required select2 custom-label">Batch</label>

                                    @Html.TextBoxFor(m => m.Batch, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.Batch, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                        <label class=" required select2 custom-label">PKD Date</label>

                                    @Html.ValidationMessageFor(m => m.PKDDate, "", new { @class = "text-danger" })
                                    @Html.TextBoxFor(m => m.PKDDate, new { @class = "form-control " })

                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
            <div class=" section-title">
                <label class="mb-0">  <i class="fas fa-industry mr-2 text-success"></i>Plant & Supply Info</label>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-2">
                        <label class=" required select2 custom-label">Plant</label>

                                    @Html.DropDownListFor(m => m.PlantId, Enumerable.Empty<SelectListItem>(), "Select Plant", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.PlantId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                        <label class="required select2 custom-label">Nearest Plant</label>

                                    @Html.DropDownListFor(m => m.NearestPlantId, Enumerable.Empty<SelectListItem>(), "Select Nearest Plant", new { @class = "form-control ", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(m => m.NearestPlantId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                        <label class="required select2 custom-label">Defective Quantity</label>

                                    @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                        <label class="required select2 custom-label">Supplied Quantity</label>

                                    @Html.TextBoxFor(m => m.SuppliedQuantity, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.SuppliedQuantity, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                        <label class="required select2 custom-label">Cat Reference</label>

                                    @Html.TextBoxFor(m => m.CatReference, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.CatReference, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
            <div class=" section-title">
                <label class="mb-0"><i class="fas fa-exclamation-circle mr-2 text-danger"></i> Complaint Details</label>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-4">
                        <label class="custom-label required select2">Description of Complaint</label>
                                    @Html.TextAreaFor(m => m.Description, 2, 40, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4">
                        <label class="custom-label required select2">Source of Complaint</label>
                                    @Html.TextBoxFor(m => m.SourceofComplaint, new { @class = "form-control " })
                                    @Html.ValidationMessageFor(m => m.SourceofComplaint, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2">
                        <label class="custom-label">Samples Shipped
                                    <div class="form-check form-switch">

                                @Html.CheckBoxFor(m => m.IsSampleShipped, new { @class = "slider round " })
                                    </div>
                        </label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
            <div class=" section-title">
                <label class="mb-0"> <i class="fas fa-paperclip mr-2 text-primary"></i> Attachments</label>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                    <label for="images" class="custom-label required">Upload Images</label>

                                <input id="File" type="file" class="form-control" name="img" multiple />
                                @* @Html.ValidationMessageFor(m => m.CSOLogFileName, "", new { @class = "text-danger" }) *@
                                @Html.Label("FileSize", "Maximum upload file size: 5 MB.", new { style = "font-style: italic; font-weight: normal;" })
                                <div class="form-text">Max size 5MB per file</div>
                            </div>

                            <div class="form-group col-3" style="display:none" id="DivTrackingNo">
                                <label class="form-label">TrackingNo</label>
                                @Html.TextBoxFor(m => m.TrackingNo, new { @class = "form-control font-weight-bold" })
                                @Html.ValidationMessageFor(m => m.TrackingNo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-3" id="DivEmptyTrackingNo">
                            </div>
                            <div class="form-group col-3">
                            </div>
                            <div class="form-group col-3">
                                <ul class="attachment" id="CSOLogImagesUL">
                                </ul>
                            </div>
                        </div>

                    </div>


                </form>
            </div>
      
@section Scripts {
    <script src="~/js/CSOLog/CSOLog.js" asp-append-version="true"></script>
    <script>
        var csoLogId = @Model.Id;
    </script>
}


